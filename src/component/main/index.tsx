// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import React, { useContext } from "react";
import {
  PlasmicMain,
  DefaultMainProps,
} from "component/plasmic/shared/PlasmicMain";
import { useParams } from "react-router-dom";
import { TimelineContext, VentureContext } from "component/app";
import { useForm } from "react-hook-form";
import { IUser } from "module/interface/user";
import { ITimeline } from "module/interface/timeline";
import { IVenture } from "module/interface/venture";

interface MainProps extends DefaultMainProps {
  isOnboarding?: boolean | "isOnboarding";
  isActive: any;
  variantType: any;
  setIsVisible: any;
  setPost: any;
  viewCreateVenture?: any;
  viewJoinVenture?: any;
  ventureId?: string;
  user: IUser;
}

function Main(props: MainProps) {
  const {
    isOnboarding,
    isActive,
    variantType,
    setIsVisible,
    setPost,
    viewCreateVenture,
    viewJoinVenture,
    ventureId,
    user,
    ...rest
  } = props;

  const { timelineSlug, ventureSlug } = useParams();

  const timelines = useContext(TimelineContext);
  const ventures = useContext(VentureContext);
  const currentVenture = ventureSlug
    ? ventures?.filter(
        (venture: IVenture) =>
          venture.name.toLowerCase().replace(/\s/g, "") === ventureSlug
      )[0]
    : ventures[0];

  const currentTimeline = timelines?.filter((timeline: ITimeline) => {
    return (
      timeline.name.toLowerCase().replace(/\s/g, "") ===
        timelineSlug?.toLowerCase().replace(/\s/g, "") ?? ""
    );
  })[0];

  const { handleSubmit, register, reset, watch, errors } = useForm();
  const watchData = watch();

  return (
    <PlasmicMain
      {...rest}
      isActive={isActive}
      variantType={variantType}
      mainHeader={{
        isActive,
        variantType,
        currentTimeline,
        watchData,
        isOnboarding,
        currentVenture,
      }}
      feedUpdate={{
        setIsVisible,
        timelines,
        currentTimeline,
        currentVenture,
        setPost,
        user,
      }}
      addEditMembers={{
        currentVenture,
        currentTimeline,
        user,
      }}
      addEditVenture={{
        currentVenture,
        handleSubmit,
        register,
        reset,
        errors,
      }}
      addEditTimeline={{
        currentVenture,
        currentTimeline,
        setIsVisible,
        handleSubmit,
        register,
        reset,
        errors,
      }}
      viewCreateVenture={{
        onClick: () => viewCreateVenture(),
      }}
      viewJoinVenture={{ onClick: () => viewJoinVenture }}
    />
  );
}

export default Main;
