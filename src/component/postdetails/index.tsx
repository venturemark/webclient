// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import React from "react";
import {
  PlasmicPostDetails,
  DefaultPostDetailsProps,
} from "component/plasmic/shared/PlasmicPostDetails";
import ReplyContent from "component/replycontent";
import { IMessage, ISearchMessage } from "module/interface/message";
import { useMessages } from "module/hook/message";
import { IUpdate } from "module/interface/update";
import { useGetToken } from "module/auth";

interface PostDetailsProps extends DefaultPostDetailsProps {
  setIsVisible: any;
  post: IUpdate;
  ventureName: string;
  ventureId: string;
}

function PostDetails(props: PostDetailsProps) {
  const { setIsVisible, post, ventureName, ventureId } = props;
  const token = useGetToken();

  const timelineId = post?.timelineId ?? "";
  const updateId = post?.id ?? "";

  const messageSearch: ISearchMessage = {
    updateId,
    timelineId,
    ventureId,
    token,
  };

  const { data: messagesData } = useMessages(messageSearch);
  const messages = messagesData ?? [];

  return (
    <PlasmicPostDetails
      close={{
        onClick: () => setIsVisible(undefined),
      }}
      post={{
        state: "isPostDetails",
        title: post?.title ?? "no title",
        description: post?.text ?? "",
        id: updateId,
        ventureName: ventureName,
        timelineId: timelineId,
        userName: "",
        userInitials: "",
        date: post?.date ?? "",
      }}
      repliesContainer={{
        children: messages.map((message: IMessage) => (
          <ReplyContent
            userName={""}
            date={message.date}
            key={message.id}
            text={message.text}
          />
        )),
      }}
      replyInput={{
        ventureId,
        timelineId,
        updateId,
      }}
    />
  );
}

export default PostDetails;
