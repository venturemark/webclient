// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import React, { useState } from "react";
import {
  PlasmicReplyContent,
  DefaultReplyContentProps,
} from "component/plasmic/shared/PlasmicReplyContent";
import ReplyContentSecond from "component/replycontent";
import { IMessageQuery } from "module/interface/message";
import { useMessages } from "module/hook/message";

interface ReplyContentProps extends DefaultReplyContentProps {
  id: string;
  updateId: string;
  timelineId: string;
  organizationId: string;
  userName: string;
  text: string;
  date: string;
}

function ReplyContent(props: ReplyContentProps) {
  const {
    updateId,
    timelineId,
    userName,
    organizationId,
    id,
    date,
    text,
  } = props;
  const [state, setState] = useState<"isUser" | undefined>(undefined);

  const token = "";

  const messageSearch: IMessageQuery = {
    updateId,
    reid: id,
    timelineId,
    userId: userName,
    organizationId,
    token,
  };

  const { data: messagesData } = useMessages(messageSearch);
  const messages =
    messagesData?.filter((message: any) => message.reid === id) ?? [];

  return (
    <PlasmicReplyContent
      state={state}
      // replyInput={{
      //   organizationId: organizationId,
      //   timelineId,
      //   updateId,
      //   userId: userName,
      //   reid: id,
      // }}
      userName={userName}
      text={text}
      date={date}
      // repliesContainer={{
      //   children: messages.map((message: any) => (
      //     <ReplyContentSecond
      //       userName={message.userId}
      //       date={message.date}
      //       key={message.id}
      //       id={message.id}
      //       text={message.text}
      //       updateId={updateId}
      //       timelineId={timelineId}
      //       organizationId={organizationId}
      //     />
      //   )),
      // }}
      // replyButton={{
      //   onClick: () => setState("isUser"),
      // }}
    />
  );
}

export default ReplyContent;
