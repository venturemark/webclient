// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import { useForm } from "react-hook-form";
import { format } from "date-fns";
import {
  PlasmicSidebar,
  DefaultSidebarProps,
} from "component/plasmic/shared/PlasmicSidebar";
import SidebarItem, { TimelineType } from "component/sidebaritem";
interface SidebarProps extends DefaultSidebarProps {
  timelines: TimelineType[];
  setTimelines: React.Dispatch<React.SetStateAction<TimelineType[]>>;
  showSidebar: boolean;
  setShowSidebar: React.Dispatch<React.SetStateAction<boolean>>;
}

type FormInputs = {
  name: string;
};

function Sidebar(props: SidebarProps) {
  const { timelines, setShowSidebar, setTimelines, showSidebar } = props;
  const { register, handleSubmit, reset, watch } = useForm<FormInputs>();
  const hasValue = watch("name") ? true : false;

  const handleAddTimeline = (data: FormInputs) => {
    if (!data.name) {
      return;
    }

    const timeline = {
      name: data.name,
      date: format(new Date(), "PP"),
      id: format(new Date(), "PP"),
    };
    setTimelines([timeline, ...timelines]);

    //reset form
    reset({
      name: "",
    });
  };

  console.log(hasValue);

  return (
    <PlasmicSidebar
      homeItem={{
        onClick: () => alert("home pressed!"),
        onPress: () => setShowSidebar(!showSidebar),
      }}
      profileItem={{
        onClick: () => alert("profile pressed!"),
      }}
      settingsItem={{
        onClick: () => alert("settings pressed!"),
      }}
      timelinesContainer={{
        children: timelines.map((timeline) => (
          <SidebarItem
            name={timeline.name}
            onClick={() => alert("timeline pressed!")}
          />
        )),
      }}
      addTimeline={{
        "aria-label": "Toggle sidebar",
        onPress: () => {
          if (!hasValue) {
            setShowSidebar(!showSidebar);
          } else {
            handleSubmit(handleAddTimeline)();
          }
        },
      }}
      sidebarForm={{
        onSubmit: handleSubmit(handleAddTimeline),
      }}
      addTimelineInput={{
        name: "name",
        ref: register,
      }}
    />
  );
}

export default Sidebar;
