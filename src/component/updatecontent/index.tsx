// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import React, {useState} from 'react';
import {
  PlasmicUpdateContent,
  DefaultUpdateContentProps,
} from 'component/plasmic/shared/PlasmicUpdateContent';
import ReadEditor from 'component/editor/read';
import { Node } from 'slate';
import {
  IMessage,
  INewMessage,
  IMessageQuery,
} from 'module/interface/message';
import {
  useMessages,
  useCreateMessage,
} from 'module/hook/message';

interface UpdateContentProps extends DefaultUpdateContentProps {
  text: Node[];
  organizationName: string;
  userName: string;
  timelineName: string;
  date: string;
}

function UpdateContent(props: UpdateContentProps) {
  const {
    text,
    organizationName,
    userName,
    timelineName,
    date,
  } = props;

  // const [isReply, setIsReply] = useState(false)
  const { mutate: createMessage } = useCreateMessage();

  const handleAddMessage = (data: FormInputs) => {
    if (!data.name) {
      return;
    }

    const newMessage: INewMessage = {
      text: 'edit message description',
      audienceId: '1',
      organizationId: organizationName,
      userId: userName,
    };

    // audienceMutation(messageId)
    createMessage(newMessage);

    //reset form
    reset({
      name: '',
    });
  };

  return (
    <PlasmicUpdateContent
      // isReply={isReply}
      replyButton={{
        onClick: () => createMessage(),
      }}
      organizationName={organizationName}
      userName={userName}
      timelineName={timelineName}
      date={date}
      textContainer={{
        render: () => <ReadEditor text={text} />,
      }}
    />
  );
}

export default UpdateContent;
