/* eslint-disable */
// source: pbf/metric/search.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require("google-protobuf");
var goog = jspb;
var global = Function("return this")();

goog.exportSymbol("proto.metric.SearchI", null, global);
goog.exportSymbol("proto.metric.SearchI_API", null, global);
goog.exportSymbol("proto.metric.SearchI_API_Chunking", null, global);
goog.exportSymbol("proto.metric.SearchI_Obj", null, global);
goog.exportSymbol("proto.metric.SearchI_Obj_Property", null, global);
goog.exportSymbol("proto.metric.SearchO", null, global);
goog.exportSymbol("proto.metric.SearchO_API", null, global);
goog.exportSymbol("proto.metric.SearchO_API_Chunking", null, global);
goog.exportSymbol("proto.metric.SearchO_Obj", null, global);
goog.exportSymbol("proto.metric.SearchO_Obj_Property", null, global);
goog.exportSymbol("proto.metric.SearchO_Obj_Property_Data", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.metric.SearchI = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.metric.SearchI.repeatedFields_,
    null
  );
};
goog.inherits(proto.metric.SearchI, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.metric.SearchI.displayName = "proto.metric.SearchI";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.metric.SearchI_API = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.metric.SearchI_API.repeatedFields_,
    null
  );
};
goog.inherits(proto.metric.SearchI_API, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.metric.SearchI_API.displayName = "proto.metric.SearchI_API";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.metric.SearchI_API_Chunking = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.metric.SearchI_API_Chunking, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.metric.SearchI_API_Chunking.displayName =
    "proto.metric.SearchI_API_Chunking";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.metric.SearchI_Obj = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.metric.SearchI_Obj, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.metric.SearchI_Obj.displayName = "proto.metric.SearchI_Obj";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.metric.SearchI_Obj_Property = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.metric.SearchI_Obj_Property, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.metric.SearchI_Obj_Property.displayName =
    "proto.metric.SearchI_Obj_Property";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.metric.SearchO = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.metric.SearchO.repeatedFields_,
    null
  );
};
goog.inherits(proto.metric.SearchO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.metric.SearchO.displayName = "proto.metric.SearchO";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.metric.SearchO_API = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.metric.SearchO_API, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.metric.SearchO_API.displayName = "proto.metric.SearchO_API";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.metric.SearchO_API_Chunking = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.metric.SearchO_API_Chunking, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.metric.SearchO_API_Chunking.displayName =
    "proto.metric.SearchO_API_Chunking";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.metric.SearchO_Obj = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.metric.SearchO_Obj, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.metric.SearchO_Obj.displayName = "proto.metric.SearchO_Obj";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.metric.SearchO_Obj_Property = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.metric.SearchO_Obj_Property.repeatedFields_,
    null
  );
};
goog.inherits(proto.metric.SearchO_Obj_Property, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.metric.SearchO_Obj_Property.displayName =
    "proto.metric.SearchO_Obj_Property";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.metric.SearchO_Obj_Property_Data = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.metric.SearchO_Obj_Property_Data.repeatedFields_,
    null
  );
};
goog.inherits(proto.metric.SearchO_Obj_Property_Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.metric.SearchO_Obj_Property_Data.displayName =
    "proto.metric.SearchO_Obj_Property_Data";
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.metric.SearchI.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.metric.SearchI.prototype.toObject = function (opt_includeInstance) {
    return proto.metric.SearchI.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.metric.SearchI} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.metric.SearchI.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        api:
          (f = msg.getApi()) &&
          proto.metric.SearchI_API.toObject(includeInstance, f),
        objList: jspb.Message.toObjectList(
          msg.getObjList(),
          proto.metric.SearchI_Obj.toObject,
          includeInstance
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.metric.SearchI}
 */
proto.metric.SearchI.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.metric.SearchI();
  return proto.metric.SearchI.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.metric.SearchI} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.metric.SearchI}
 */
proto.metric.SearchI.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.metric.SearchI_API();
        reader.readMessage(
          value,
          proto.metric.SearchI_API.deserializeBinaryFromReader
        );
        msg.setApi(value);
        break;
      case 2:
        var value = new proto.metric.SearchI_Obj();
        reader.readMessage(
          value,
          proto.metric.SearchI_Obj.deserializeBinaryFromReader
        );
        msg.addObj(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.metric.SearchI.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.metric.SearchI.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.metric.SearchI} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.metric.SearchI.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getApi();
  if (f != null) {
    writer.writeMessage(1, f, proto.metric.SearchI_API.serializeBinaryToWriter);
  }
  f = message.getObjList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.metric.SearchI_Obj.serializeBinaryToWriter
    );
  }
};

/**
 * optional SearchI_API api = 1;
 * @return {?proto.metric.SearchI_API}
 */
proto.metric.SearchI.prototype.getApi = function () {
  return /** @type{?proto.metric.SearchI_API} */ (jspb.Message.getWrapperField(
    this,
    proto.metric.SearchI_API,
    1
  ));
};

/**
 * @param {?proto.metric.SearchI_API|undefined} value
 * @return {!proto.metric.SearchI} returns this
 */
proto.metric.SearchI.prototype.setApi = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.metric.SearchI} returns this
 */
proto.metric.SearchI.prototype.clearApi = function () {
  return this.setApi(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.metric.SearchI.prototype.hasApi = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * repeated SearchI_Obj obj = 2;
 * @return {!Array<!proto.metric.SearchI_Obj>}
 */
proto.metric.SearchI.prototype.getObjList = function () {
  return /** @type{!Array<!proto.metric.SearchI_Obj>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.metric.SearchI_Obj,
    2
  ));
};

/**
 * @param {!Array<!proto.metric.SearchI_Obj>} value
 * @return {!proto.metric.SearchI} returns this
 */
proto.metric.SearchI.prototype.setObjList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.metric.SearchI_Obj=} opt_value
 * @param {number=} opt_index
 * @return {!proto.metric.SearchI_Obj}
 */
proto.metric.SearchI.prototype.addObj = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    2,
    opt_value,
    proto.metric.SearchI_Obj,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.metric.SearchI} returns this
 */
proto.metric.SearchI.prototype.clearObjList = function () {
  return this.setObjList([]);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.metric.SearchI_API.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.metric.SearchI_API.prototype.toObject = function (opt_includeInstance) {
    return proto.metric.SearchI_API.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.metric.SearchI_API} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.metric.SearchI_API.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        chunking:
          (f = msg.getChunking()) &&
          proto.metric.SearchI_API_Chunking.toObject(includeInstance, f),
        operatorList:
          (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.metric.SearchI_API}
 */
proto.metric.SearchI_API.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.metric.SearchI_API();
  return proto.metric.SearchI_API.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.metric.SearchI_API} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.metric.SearchI_API}
 */
proto.metric.SearchI_API.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.metric.SearchI_API_Chunking();
        reader.readMessage(
          value,
          proto.metric.SearchI_API_Chunking.deserializeBinaryFromReader
        );
        msg.setChunking(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.addOperator(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.metric.SearchI_API.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.metric.SearchI_API.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.metric.SearchI_API} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.metric.SearchI_API.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getChunking();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.metric.SearchI_API_Chunking.serializeBinaryToWriter
    );
  }
  f = message.getOperatorList();
  if (f.length > 0) {
    writer.writeRepeatedString(2, f);
  }
};

/**
 * optional SearchI_API_Chunking chunking = 1;
 * @return {?proto.metric.SearchI_API_Chunking}
 */
proto.metric.SearchI_API.prototype.getChunking = function () {
  return /** @type{?proto.metric.SearchI_API_Chunking} */ (jspb.Message.getWrapperField(
    this,
    proto.metric.SearchI_API_Chunking,
    1
  ));
};

/**
 * @param {?proto.metric.SearchI_API_Chunking|undefined} value
 * @return {!proto.metric.SearchI_API} returns this
 */
proto.metric.SearchI_API.prototype.setChunking = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.metric.SearchI_API} returns this
 */
proto.metric.SearchI_API.prototype.clearChunking = function () {
  return this.setChunking(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.metric.SearchI_API.prototype.hasChunking = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * repeated string operator = 2;
 * @return {!Array<string>}
 */
proto.metric.SearchI_API.prototype.getOperatorList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.metric.SearchI_API} returns this
 */
proto.metric.SearchI_API.prototype.setOperatorList = function (value) {
  return jspb.Message.setField(this, 2, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.metric.SearchI_API} returns this
 */
proto.metric.SearchI_API.prototype.addOperator = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.metric.SearchI_API} returns this
 */
proto.metric.SearchI_API.prototype.clearOperatorList = function () {
  return this.setOperatorList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.metric.SearchI_API_Chunking.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.metric.SearchI_API_Chunking.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.metric.SearchI_API_Chunking} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.metric.SearchI_API_Chunking.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        pointer: jspb.Message.getFieldWithDefault(msg, 1, ""),
        perpage: jspb.Message.getFieldWithDefault(msg, 2, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.metric.SearchI_API_Chunking}
 */
proto.metric.SearchI_API_Chunking.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.metric.SearchI_API_Chunking();
  return proto.metric.SearchI_API_Chunking.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.metric.SearchI_API_Chunking} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.metric.SearchI_API_Chunking}
 */
proto.metric.SearchI_API_Chunking.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setPointer(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setPerpage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.metric.SearchI_API_Chunking.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.metric.SearchI_API_Chunking.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.metric.SearchI_API_Chunking} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.metric.SearchI_API_Chunking.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getPointer();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getPerpage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string pointer = 1;
 * @return {string}
 */
proto.metric.SearchI_API_Chunking.prototype.getPointer = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.metric.SearchI_API_Chunking} returns this
 */
proto.metric.SearchI_API_Chunking.prototype.setPointer = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string perpage = 2;
 * @return {string}
 */
proto.metric.SearchI_API_Chunking.prototype.getPerpage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.metric.SearchI_API_Chunking} returns this
 */
proto.metric.SearchI_API_Chunking.prototype.setPerpage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.metric.SearchI_Obj.prototype.toObject = function (opt_includeInstance) {
    return proto.metric.SearchI_Obj.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.metric.SearchI_Obj} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.metric.SearchI_Obj.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        metadataMap: (f = msg.getMetadataMap())
          ? f.toObject(includeInstance, undefined)
          : [],
        property:
          (f = msg.getProperty()) &&
          proto.metric.SearchI_Obj_Property.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.metric.SearchI_Obj}
 */
proto.metric.SearchI_Obj.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.metric.SearchI_Obj();
  return proto.metric.SearchI_Obj.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.metric.SearchI_Obj} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.metric.SearchI_Obj}
 */
proto.metric.SearchI_Obj.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = msg.getMetadataMap();
        reader.readMessage(value, function (message, reader) {
          jspb.Map.deserializeBinary(
            message,
            reader,
            jspb.BinaryReader.prototype.readString,
            jspb.BinaryReader.prototype.readString,
            null,
            "",
            ""
          );
        });
        break;
      case 2:
        var value = new proto.metric.SearchI_Obj_Property();
        reader.readMessage(
          value,
          proto.metric.SearchI_Obj_Property.deserializeBinaryFromReader
        );
        msg.setProperty(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.metric.SearchI_Obj.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.metric.SearchI_Obj.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.metric.SearchI_Obj} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.metric.SearchI_Obj.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(
      1,
      writer,
      jspb.BinaryWriter.prototype.writeString,
      jspb.BinaryWriter.prototype.writeString
    );
  }
  f = message.getProperty();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.metric.SearchI_Obj_Property.serializeBinaryToWriter
    );
  }
};

/**
 * map<string, string> metadata = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.metric.SearchI_Obj.prototype.getMetadataMap = function (
  opt_noLazyCreate
) {
  return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(
    this,
    1,
    opt_noLazyCreate,
    null
  ));
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.metric.SearchI_Obj} returns this
 */
proto.metric.SearchI_Obj.prototype.clearMetadataMap = function () {
  this.getMetadataMap().clear();
  return this;
};

/**
 * optional SearchI_Obj_Property property = 2;
 * @return {?proto.metric.SearchI_Obj_Property}
 */
proto.metric.SearchI_Obj.prototype.getProperty = function () {
  return /** @type{?proto.metric.SearchI_Obj_Property} */ (jspb.Message.getWrapperField(
    this,
    proto.metric.SearchI_Obj_Property,
    2
  ));
};

/**
 * @param {?proto.metric.SearchI_Obj_Property|undefined} value
 * @return {!proto.metric.SearchI_Obj} returns this
 */
proto.metric.SearchI_Obj.prototype.setProperty = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.metric.SearchI_Obj} returns this
 */
proto.metric.SearchI_Obj.prototype.clearProperty = function () {
  return this.setProperty(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.metric.SearchI_Obj.prototype.hasProperty = function () {
  return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.metric.SearchI_Obj_Property.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.metric.SearchI_Obj_Property.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.metric.SearchI_Obj_Property} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.metric.SearchI_Obj_Property.toObject = function (includeInstance, msg) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.metric.SearchI_Obj_Property}
 */
proto.metric.SearchI_Obj_Property.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.metric.SearchI_Obj_Property();
  return proto.metric.SearchI_Obj_Property.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.metric.SearchI_Obj_Property} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.metric.SearchI_Obj_Property}
 */
proto.metric.SearchI_Obj_Property.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.metric.SearchI_Obj_Property.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.metric.SearchI_Obj_Property.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.metric.SearchI_Obj_Property} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.metric.SearchI_Obj_Property.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.metric.SearchO.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.metric.SearchO.prototype.toObject = function (opt_includeInstance) {
    return proto.metric.SearchO.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.metric.SearchO} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.metric.SearchO.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        api:
          (f = msg.getApi()) &&
          proto.metric.SearchO_API.toObject(includeInstance, f),
        objList: jspb.Message.toObjectList(
          msg.getObjList(),
          proto.metric.SearchO_Obj.toObject,
          includeInstance
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.metric.SearchO}
 */
proto.metric.SearchO.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.metric.SearchO();
  return proto.metric.SearchO.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.metric.SearchO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.metric.SearchO}
 */
proto.metric.SearchO.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.metric.SearchO_API();
        reader.readMessage(
          value,
          proto.metric.SearchO_API.deserializeBinaryFromReader
        );
        msg.setApi(value);
        break;
      case 2:
        var value = new proto.metric.SearchO_Obj();
        reader.readMessage(
          value,
          proto.metric.SearchO_Obj.deserializeBinaryFromReader
        );
        msg.addObj(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.metric.SearchO.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.metric.SearchO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.metric.SearchO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.metric.SearchO.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getApi();
  if (f != null) {
    writer.writeMessage(1, f, proto.metric.SearchO_API.serializeBinaryToWriter);
  }
  f = message.getObjList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.metric.SearchO_Obj.serializeBinaryToWriter
    );
  }
};

/**
 * optional SearchO_API api = 1;
 * @return {?proto.metric.SearchO_API}
 */
proto.metric.SearchO.prototype.getApi = function () {
  return /** @type{?proto.metric.SearchO_API} */ (jspb.Message.getWrapperField(
    this,
    proto.metric.SearchO_API,
    1
  ));
};

/**
 * @param {?proto.metric.SearchO_API|undefined} value
 * @return {!proto.metric.SearchO} returns this
 */
proto.metric.SearchO.prototype.setApi = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.metric.SearchO} returns this
 */
proto.metric.SearchO.prototype.clearApi = function () {
  return this.setApi(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.metric.SearchO.prototype.hasApi = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * repeated SearchO_Obj obj = 2;
 * @return {!Array<!proto.metric.SearchO_Obj>}
 */
proto.metric.SearchO.prototype.getObjList = function () {
  return /** @type{!Array<!proto.metric.SearchO_Obj>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.metric.SearchO_Obj,
    2
  ));
};

/**
 * @param {!Array<!proto.metric.SearchO_Obj>} value
 * @return {!proto.metric.SearchO} returns this
 */
proto.metric.SearchO.prototype.setObjList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.metric.SearchO_Obj=} opt_value
 * @param {number=} opt_index
 * @return {!proto.metric.SearchO_Obj}
 */
proto.metric.SearchO.prototype.addObj = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    2,
    opt_value,
    proto.metric.SearchO_Obj,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.metric.SearchO} returns this
 */
proto.metric.SearchO.prototype.clearObjList = function () {
  return this.setObjList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.metric.SearchO_API.prototype.toObject = function (opt_includeInstance) {
    return proto.metric.SearchO_API.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.metric.SearchO_API} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.metric.SearchO_API.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        chunking:
          (f = msg.getChunking()) &&
          proto.metric.SearchO_API_Chunking.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.metric.SearchO_API}
 */
proto.metric.SearchO_API.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.metric.SearchO_API();
  return proto.metric.SearchO_API.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.metric.SearchO_API} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.metric.SearchO_API}
 */
proto.metric.SearchO_API.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.metric.SearchO_API_Chunking();
        reader.readMessage(
          value,
          proto.metric.SearchO_API_Chunking.deserializeBinaryFromReader
        );
        msg.setChunking(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.metric.SearchO_API.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.metric.SearchO_API.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.metric.SearchO_API} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.metric.SearchO_API.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getChunking();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.metric.SearchO_API_Chunking.serializeBinaryToWriter
    );
  }
};

/**
 * optional SearchO_API_Chunking chunking = 1;
 * @return {?proto.metric.SearchO_API_Chunking}
 */
proto.metric.SearchO_API.prototype.getChunking = function () {
  return /** @type{?proto.metric.SearchO_API_Chunking} */ (jspb.Message.getWrapperField(
    this,
    proto.metric.SearchO_API_Chunking,
    1
  ));
};

/**
 * @param {?proto.metric.SearchO_API_Chunking|undefined} value
 * @return {!proto.metric.SearchO_API} returns this
 */
proto.metric.SearchO_API.prototype.setChunking = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.metric.SearchO_API} returns this
 */
proto.metric.SearchO_API.prototype.clearChunking = function () {
  return this.setChunking(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.metric.SearchO_API.prototype.hasChunking = function () {
  return jspb.Message.getField(this, 1) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.metric.SearchO_API_Chunking.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.metric.SearchO_API_Chunking.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.metric.SearchO_API_Chunking} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.metric.SearchO_API_Chunking.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        pointer: jspb.Message.getFieldWithDefault(msg, 1, ""),
        perpage: jspb.Message.getFieldWithDefault(msg, 2, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.metric.SearchO_API_Chunking}
 */
proto.metric.SearchO_API_Chunking.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.metric.SearchO_API_Chunking();
  return proto.metric.SearchO_API_Chunking.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.metric.SearchO_API_Chunking} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.metric.SearchO_API_Chunking}
 */
proto.metric.SearchO_API_Chunking.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setPointer(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setPerpage(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.metric.SearchO_API_Chunking.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.metric.SearchO_API_Chunking.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.metric.SearchO_API_Chunking} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.metric.SearchO_API_Chunking.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getPointer();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getPerpage();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string pointer = 1;
 * @return {string}
 */
proto.metric.SearchO_API_Chunking.prototype.getPointer = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.metric.SearchO_API_Chunking} returns this
 */
proto.metric.SearchO_API_Chunking.prototype.setPointer = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string perpage = 2;
 * @return {string}
 */
proto.metric.SearchO_API_Chunking.prototype.getPerpage = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.metric.SearchO_API_Chunking} returns this
 */
proto.metric.SearchO_API_Chunking.prototype.setPerpage = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.metric.SearchO_Obj.prototype.toObject = function (opt_includeInstance) {
    return proto.metric.SearchO_Obj.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.metric.SearchO_Obj} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.metric.SearchO_Obj.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        metadataMap: (f = msg.getMetadataMap())
          ? f.toObject(includeInstance, undefined)
          : [],
        property:
          (f = msg.getProperty()) &&
          proto.metric.SearchO_Obj_Property.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.metric.SearchO_Obj}
 */
proto.metric.SearchO_Obj.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.metric.SearchO_Obj();
  return proto.metric.SearchO_Obj.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.metric.SearchO_Obj} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.metric.SearchO_Obj}
 */
proto.metric.SearchO_Obj.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = msg.getMetadataMap();
        reader.readMessage(value, function (message, reader) {
          jspb.Map.deserializeBinary(
            message,
            reader,
            jspb.BinaryReader.prototype.readString,
            jspb.BinaryReader.prototype.readString,
            null,
            "",
            ""
          );
        });
        break;
      case 2:
        var value = new proto.metric.SearchO_Obj_Property();
        reader.readMessage(
          value,
          proto.metric.SearchO_Obj_Property.deserializeBinaryFromReader
        );
        msg.setProperty(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.metric.SearchO_Obj.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.metric.SearchO_Obj.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.metric.SearchO_Obj} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.metric.SearchO_Obj.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(
      1,
      writer,
      jspb.BinaryWriter.prototype.writeString,
      jspb.BinaryWriter.prototype.writeString
    );
  }
  f = message.getProperty();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.metric.SearchO_Obj_Property.serializeBinaryToWriter
    );
  }
};

/**
 * map<string, string> metadata = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.metric.SearchO_Obj.prototype.getMetadataMap = function (
  opt_noLazyCreate
) {
  return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(
    this,
    1,
    opt_noLazyCreate,
    null
  ));
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.metric.SearchO_Obj} returns this
 */
proto.metric.SearchO_Obj.prototype.clearMetadataMap = function () {
  this.getMetadataMap().clear();
  return this;
};

/**
 * optional SearchO_Obj_Property property = 2;
 * @return {?proto.metric.SearchO_Obj_Property}
 */
proto.metric.SearchO_Obj.prototype.getProperty = function () {
  return /** @type{?proto.metric.SearchO_Obj_Property} */ (jspb.Message.getWrapperField(
    this,
    proto.metric.SearchO_Obj_Property,
    2
  ));
};

/**
 * @param {?proto.metric.SearchO_Obj_Property|undefined} value
 * @return {!proto.metric.SearchO_Obj} returns this
 */
proto.metric.SearchO_Obj.prototype.setProperty = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.metric.SearchO_Obj} returns this
 */
proto.metric.SearchO_Obj.prototype.clearProperty = function () {
  return this.setProperty(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.metric.SearchO_Obj.prototype.hasProperty = function () {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.metric.SearchO_Obj_Property.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.metric.SearchO_Obj_Property.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.metric.SearchO_Obj_Property.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.metric.SearchO_Obj_Property} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.metric.SearchO_Obj_Property.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        dataList: jspb.Message.toObjectList(
          msg.getDataList(),
          proto.metric.SearchO_Obj_Property_Data.toObject,
          includeInstance
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.metric.SearchO_Obj_Property}
 */
proto.metric.SearchO_Obj_Property.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.metric.SearchO_Obj_Property();
  return proto.metric.SearchO_Obj_Property.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.metric.SearchO_Obj_Property} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.metric.SearchO_Obj_Property}
 */
proto.metric.SearchO_Obj_Property.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.metric.SearchO_Obj_Property_Data();
        reader.readMessage(
          value,
          proto.metric.SearchO_Obj_Property_Data.deserializeBinaryFromReader
        );
        msg.addData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.metric.SearchO_Obj_Property.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.metric.SearchO_Obj_Property.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.metric.SearchO_Obj_Property} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.metric.SearchO_Obj_Property.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.metric.SearchO_Obj_Property_Data.serializeBinaryToWriter
    );
  }
};

/**
 * repeated SearchO_Obj_Property_Data data = 1;
 * @return {!Array<!proto.metric.SearchO_Obj_Property_Data>}
 */
proto.metric.SearchO_Obj_Property.prototype.getDataList = function () {
  return /** @type{!Array<!proto.metric.SearchO_Obj_Property_Data>} */ (jspb.Message.getRepeatedWrapperField(
    this,
    proto.metric.SearchO_Obj_Property_Data,
    1
  ));
};

/**
 * @param {!Array<!proto.metric.SearchO_Obj_Property_Data>} value
 * @return {!proto.metric.SearchO_Obj_Property} returns this
 */
proto.metric.SearchO_Obj_Property.prototype.setDataList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.metric.SearchO_Obj_Property_Data=} opt_value
 * @param {number=} opt_index
 * @return {!proto.metric.SearchO_Obj_Property_Data}
 */
proto.metric.SearchO_Obj_Property.prototype.addData = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.metric.SearchO_Obj_Property_Data,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.metric.SearchO_Obj_Property} returns this
 */
proto.metric.SearchO_Obj_Property.prototype.clearDataList = function () {
  return this.setDataList([]);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.metric.SearchO_Obj_Property_Data.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.metric.SearchO_Obj_Property_Data.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.metric.SearchO_Obj_Property_Data.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.metric.SearchO_Obj_Property_Data} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.metric.SearchO_Obj_Property_Data.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        space: jspb.Message.getFieldWithDefault(msg, 1, ""),
        valueList:
          (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null
            ? undefined
            : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.metric.SearchO_Obj_Property_Data}
 */
proto.metric.SearchO_Obj_Property_Data.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.metric.SearchO_Obj_Property_Data();
  return proto.metric.SearchO_Obj_Property_Data.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.metric.SearchO_Obj_Property_Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.metric.SearchO_Obj_Property_Data}
 */
proto.metric.SearchO_Obj_Property_Data.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setSpace(value);
        break;
      case 2:
        var value = /** @type {!Array<number>} */ (reader.readPackedDouble());
        msg.setValueList(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.metric.SearchO_Obj_Property_Data.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.metric.SearchO_Obj_Property_Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.metric.SearchO_Obj_Property_Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.metric.SearchO_Obj_Property_Data.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getSpace();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getValueList();
  if (f.length > 0) {
    writer.writePackedDouble(2, f);
  }
};

/**
 * optional string space = 1;
 * @return {string}
 */
proto.metric.SearchO_Obj_Property_Data.prototype.getSpace = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.metric.SearchO_Obj_Property_Data} returns this
 */
proto.metric.SearchO_Obj_Property_Data.prototype.setSpace = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * repeated double value = 2;
 * @return {!Array<number>}
 */
proto.metric.SearchO_Obj_Property_Data.prototype.getValueList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(
    this,
    2
  ));
};

/**
 * @param {!Array<number>} value
 * @return {!proto.metric.SearchO_Obj_Property_Data} returns this
 */
proto.metric.SearchO_Obj_Property_Data.prototype.setValueList = function (
  value
) {
  return jspb.Message.setField(this, 2, value || []);
};

/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.metric.SearchO_Obj_Property_Data} returns this
 */
proto.metric.SearchO_Obj_Property_Data.prototype.addValue = function (
  value,
  opt_index
) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.metric.SearchO_Obj_Property_Data} returns this
 */
proto.metric.SearchO_Obj_Property_Data.prototype.clearValueList = function () {
  return this.setValueList([]);
};

goog.object.extend(exports, proto.metric);
