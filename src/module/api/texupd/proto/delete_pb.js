/* eslint-disable */
// source: pbf/texupd/delete.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require("google-protobuf");
var goog = jspb;
var global = Function("return this")();

goog.exportSymbol("proto.texupd.DeleteI", null, global);
goog.exportSymbol("proto.texupd.DeleteI_API", null, global);
goog.exportSymbol("proto.texupd.DeleteI_Obj", null, global);
goog.exportSymbol("proto.texupd.DeleteO", null, global);
goog.exportSymbol("proto.texupd.DeleteO_API", null, global);
goog.exportSymbol("proto.texupd.DeleteO_Obj", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.texupd.DeleteI = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.texupd.DeleteI, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.texupd.DeleteI.displayName = "proto.texupd.DeleteI";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.texupd.DeleteI_API = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.texupd.DeleteI_API, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.texupd.DeleteI_API.displayName = "proto.texupd.DeleteI_API";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.texupd.DeleteI_Obj = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.texupd.DeleteI_Obj, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.texupd.DeleteI_Obj.displayName = "proto.texupd.DeleteI_Obj";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.texupd.DeleteO = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.texupd.DeleteO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.texupd.DeleteO.displayName = "proto.texupd.DeleteO";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.texupd.DeleteO_API = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.texupd.DeleteO_API, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.texupd.DeleteO_API.displayName = "proto.texupd.DeleteO_API";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.texupd.DeleteO_Obj = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.texupd.DeleteO_Obj, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.texupd.DeleteO_Obj.displayName = "proto.texupd.DeleteO_Obj";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.texupd.DeleteI.prototype.toObject = function (opt_includeInstance) {
    return proto.texupd.DeleteI.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.texupd.DeleteI} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.texupd.DeleteI.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        api:
          (f = msg.getApi()) &&
          proto.texupd.DeleteI_API.toObject(includeInstance, f),
        obj:
          (f = msg.getObj()) &&
          proto.texupd.DeleteI_Obj.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.texupd.DeleteI}
 */
proto.texupd.DeleteI.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.texupd.DeleteI();
  return proto.texupd.DeleteI.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.texupd.DeleteI} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.texupd.DeleteI}
 */
proto.texupd.DeleteI.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.texupd.DeleteI_API();
        reader.readMessage(
          value,
          proto.texupd.DeleteI_API.deserializeBinaryFromReader
        );
        msg.setApi(value);
        break;
      case 2:
        var value = new proto.texupd.DeleteI_Obj();
        reader.readMessage(
          value,
          proto.texupd.DeleteI_Obj.deserializeBinaryFromReader
        );
        msg.setObj(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.texupd.DeleteI.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.texupd.DeleteI.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.texupd.DeleteI} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.texupd.DeleteI.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getApi();
  if (f != null) {
    writer.writeMessage(1, f, proto.texupd.DeleteI_API.serializeBinaryToWriter);
  }
  f = message.getObj();
  if (f != null) {
    writer.writeMessage(2, f, proto.texupd.DeleteI_Obj.serializeBinaryToWriter);
  }
};

/**
 * optional DeleteI_API api = 1;
 * @return {?proto.texupd.DeleteI_API}
 */
proto.texupd.DeleteI.prototype.getApi = function () {
  return /** @type{?proto.texupd.DeleteI_API} */ (jspb.Message.getWrapperField(
    this,
    proto.texupd.DeleteI_API,
    1
  ));
};

/**
 * @param {?proto.texupd.DeleteI_API|undefined} value
 * @return {!proto.texupd.DeleteI} returns this
 */
proto.texupd.DeleteI.prototype.setApi = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.texupd.DeleteI} returns this
 */
proto.texupd.DeleteI.prototype.clearApi = function () {
  return this.setApi(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.texupd.DeleteI.prototype.hasApi = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional DeleteI_Obj obj = 2;
 * @return {?proto.texupd.DeleteI_Obj}
 */
proto.texupd.DeleteI.prototype.getObj = function () {
  return /** @type{?proto.texupd.DeleteI_Obj} */ (jspb.Message.getWrapperField(
    this,
    proto.texupd.DeleteI_Obj,
    2
  ));
};

/**
 * @param {?proto.texupd.DeleteI_Obj|undefined} value
 * @return {!proto.texupd.DeleteI} returns this
 */
proto.texupd.DeleteI.prototype.setObj = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.texupd.DeleteI} returns this
 */
proto.texupd.DeleteI.prototype.clearObj = function () {
  return this.setObj(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.texupd.DeleteI.prototype.hasObj = function () {
  return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.texupd.DeleteI_API.prototype.toObject = function (opt_includeInstance) {
    return proto.texupd.DeleteI_API.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.texupd.DeleteI_API} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.texupd.DeleteI_API.toObject = function (includeInstance, msg) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.texupd.DeleteI_API}
 */
proto.texupd.DeleteI_API.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.texupd.DeleteI_API();
  return proto.texupd.DeleteI_API.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.texupd.DeleteI_API} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.texupd.DeleteI_API}
 */
proto.texupd.DeleteI_API.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.texupd.DeleteI_API.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.texupd.DeleteI_API.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.texupd.DeleteI_API} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.texupd.DeleteI_API.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.texupd.DeleteI_Obj.prototype.toObject = function (opt_includeInstance) {
    return proto.texupd.DeleteI_Obj.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.texupd.DeleteI_Obj} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.texupd.DeleteI_Obj.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        metadataMap: (f = msg.getMetadataMap())
          ? f.toObject(includeInstance, undefined)
          : [],
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.texupd.DeleteI_Obj}
 */
proto.texupd.DeleteI_Obj.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.texupd.DeleteI_Obj();
  return proto.texupd.DeleteI_Obj.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.texupd.DeleteI_Obj} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.texupd.DeleteI_Obj}
 */
proto.texupd.DeleteI_Obj.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = msg.getMetadataMap();
        reader.readMessage(value, function (message, reader) {
          jspb.Map.deserializeBinary(
            message,
            reader,
            jspb.BinaryReader.prototype.readString,
            jspb.BinaryReader.prototype.readString,
            null,
            "",
            ""
          );
        });
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.texupd.DeleteI_Obj.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.texupd.DeleteI_Obj.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.texupd.DeleteI_Obj} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.texupd.DeleteI_Obj.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(
      1,
      writer,
      jspb.BinaryWriter.prototype.writeString,
      jspb.BinaryWriter.prototype.writeString
    );
  }
};

/**
 * map<string, string> metadata = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.texupd.DeleteI_Obj.prototype.getMetadataMap = function (
  opt_noLazyCreate
) {
  return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(
    this,
    1,
    opt_noLazyCreate,
    null
  ));
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.texupd.DeleteI_Obj} returns this
 */
proto.texupd.DeleteI_Obj.prototype.clearMetadataMap = function () {
  this.getMetadataMap().clear();
  return this;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.texupd.DeleteO.prototype.toObject = function (opt_includeInstance) {
    return proto.texupd.DeleteO.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.texupd.DeleteO} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.texupd.DeleteO.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        api:
          (f = msg.getApi()) &&
          proto.texupd.DeleteO_API.toObject(includeInstance, f),
        obj:
          (f = msg.getObj()) &&
          proto.texupd.DeleteO_Obj.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.texupd.DeleteO}
 */
proto.texupd.DeleteO.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.texupd.DeleteO();
  return proto.texupd.DeleteO.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.texupd.DeleteO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.texupd.DeleteO}
 */
proto.texupd.DeleteO.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.texupd.DeleteO_API();
        reader.readMessage(
          value,
          proto.texupd.DeleteO_API.deserializeBinaryFromReader
        );
        msg.setApi(value);
        break;
      case 2:
        var value = new proto.texupd.DeleteO_Obj();
        reader.readMessage(
          value,
          proto.texupd.DeleteO_Obj.deserializeBinaryFromReader
        );
        msg.setObj(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.texupd.DeleteO.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.texupd.DeleteO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.texupd.DeleteO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.texupd.DeleteO.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getApi();
  if (f != null) {
    writer.writeMessage(1, f, proto.texupd.DeleteO_API.serializeBinaryToWriter);
  }
  f = message.getObj();
  if (f != null) {
    writer.writeMessage(2, f, proto.texupd.DeleteO_Obj.serializeBinaryToWriter);
  }
};

/**
 * optional DeleteO_API api = 1;
 * @return {?proto.texupd.DeleteO_API}
 */
proto.texupd.DeleteO.prototype.getApi = function () {
  return /** @type{?proto.texupd.DeleteO_API} */ (jspb.Message.getWrapperField(
    this,
    proto.texupd.DeleteO_API,
    1
  ));
};

/**
 * @param {?proto.texupd.DeleteO_API|undefined} value
 * @return {!proto.texupd.DeleteO} returns this
 */
proto.texupd.DeleteO.prototype.setApi = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.texupd.DeleteO} returns this
 */
proto.texupd.DeleteO.prototype.clearApi = function () {
  return this.setApi(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.texupd.DeleteO.prototype.hasApi = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional DeleteO_Obj obj = 2;
 * @return {?proto.texupd.DeleteO_Obj}
 */
proto.texupd.DeleteO.prototype.getObj = function () {
  return /** @type{?proto.texupd.DeleteO_Obj} */ (jspb.Message.getWrapperField(
    this,
    proto.texupd.DeleteO_Obj,
    2
  ));
};

/**
 * @param {?proto.texupd.DeleteO_Obj|undefined} value
 * @return {!proto.texupd.DeleteO} returns this
 */
proto.texupd.DeleteO.prototype.setObj = function (value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.texupd.DeleteO} returns this
 */
proto.texupd.DeleteO.prototype.clearObj = function () {
  return this.setObj(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.texupd.DeleteO.prototype.hasObj = function () {
  return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.texupd.DeleteO_API.prototype.toObject = function (opt_includeInstance) {
    return proto.texupd.DeleteO_API.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.texupd.DeleteO_API} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.texupd.DeleteO_API.toObject = function (includeInstance, msg) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.texupd.DeleteO_API}
 */
proto.texupd.DeleteO_API.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.texupd.DeleteO_API();
  return proto.texupd.DeleteO_API.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.texupd.DeleteO_API} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.texupd.DeleteO_API}
 */
proto.texupd.DeleteO_API.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.texupd.DeleteO_API.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.texupd.DeleteO_API.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.texupd.DeleteO_API} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.texupd.DeleteO_API.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.texupd.DeleteO_Obj.prototype.toObject = function (opt_includeInstance) {
    return proto.texupd.DeleteO_Obj.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.texupd.DeleteO_Obj} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.texupd.DeleteO_Obj.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        metadataMap: (f = msg.getMetadataMap())
          ? f.toObject(includeInstance, undefined)
          : [],
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.texupd.DeleteO_Obj}
 */
proto.texupd.DeleteO_Obj.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.texupd.DeleteO_Obj();
  return proto.texupd.DeleteO_Obj.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.texupd.DeleteO_Obj} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.texupd.DeleteO_Obj}
 */
proto.texupd.DeleteO_Obj.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = msg.getMetadataMap();
        reader.readMessage(value, function (message, reader) {
          jspb.Map.deserializeBinary(
            message,
            reader,
            jspb.BinaryReader.prototype.readString,
            jspb.BinaryReader.prototype.readString,
            null,
            "",
            ""
          );
        });
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.texupd.DeleteO_Obj.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.texupd.DeleteO_Obj.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.texupd.DeleteO_Obj} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.texupd.DeleteO_Obj.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(
      1,
      writer,
      jspb.BinaryWriter.prototype.writeString,
      jspb.BinaryWriter.prototype.writeString
    );
  }
};

/**
 * map<string, string> metadata = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.texupd.DeleteO_Obj.prototype.getMetadataMap = function (
  opt_noLazyCreate
) {
  return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(
    this,
    1,
    opt_noLazyCreate,
    null
  ));
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.texupd.DeleteO_Obj} returns this
 */
proto.texupd.DeleteO_Obj.prototype.clearMetadataMap = function () {
  this.getMetadataMap().clear();
  return this;
};

goog.object.extend(exports, proto.texupd);
